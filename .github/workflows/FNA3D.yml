name: "FNA3D"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_SDK_VERSION: 5.0.301

on:
  push:
    branches: [develop]
    paths-ignore: ['**/*.md']

jobs:

  bindgen-job:
    name: "Bindgen"
    runs-on: ubuntu-latest
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        ref: ${{ env.GITHUB_REF }}
        submodules: true

    - name: "Bindgen"
      shell: bash
      run: ./bindgen.sh

    - name: "Add + commit + push (if necessary)"
      uses: EndBug/add-and-commit@v7
      with:
        default_author: user_info
        message: "Update bindings"

  build-native-job:
    name: "Build native libraries ${{ matrix.platform.rid }}"
    needs: [bindgen-job]
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { name: Windows (x64), os: windows-latest, rid: win-x64 }
        - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
        - { name: macOS (x64), os: macos-latest, rid: osx-x64 }
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        ref: ${{ env.GITHUB_REF }}
        submodules: 'recursive'

    - name: "Install WSL distro"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      uses: Vampire/setup-wsl@v1
      with:
        distribution: Ubuntu-18.04

    - name: "Install dependencies (WSL)"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      shell: wsl-bash {0}
      run: apt-get update && apt-get install build-essential gdb cmake mingw-w64 -y

    - name: "Build native library (WSL)"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      shell: wsl-bash {0}
      run: ./library.sh

    - name: "Build native library (Unix)"
      if: ${{ !(startsWith(matrix.platform.rid, 'win')) }}
      shell: bash
      run: ./library.sh

    - name: "Upload native libraries"
      uses: actions/upload-artifact@v2
      with:
        name: "native-libraries-${{ matrix.platform.rid }}"
        path: './lib'

  build-dotnet-job:
    name: "Build .NET solution ${{ matrix.platform.rid }}"
    needs: [build-native-job]
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { name: Windows (x64), os: windows-latest, rid: win-x64 }
        - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
        - { name: macOS (x64), os: macos-latest, rid: osx-x64 }
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        ref: ${{ env.GITHUB_REF }}
        submodules: 'true'

    - name: "Install .NET"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ env.DOTNET_SDK_VERSION }}'

    - name: "Download native libraries"
      uses: actions/download-artifact@v1
      with:
        name: "native-libraries-${{ matrix.platform.rid }}"
        path: './lib'

    - name: "Build .NET solution"
      run: dotnet build  --nologo --verbosity minimal --configuration Release
